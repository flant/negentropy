version: "3"

services:
  vault:
    container_name: vault
    image: vault:1.7.1
    volumes:
      - "../vault-plugins/build/:/vault/plugins:ro"
      - "./kafka/ca.crt:/etc/ca.crt:ro"
      - "./kafka/client.crt:/etc/client.crt:ro"
      - "./kafka/client.key:/etc/client.key:ro"
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_TOKEN=root
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_LOG_LEVEL=debug
    command: server -dev -dev-plugin-dir=/vault/plugins
    cap_add:
      - IPC_LOCK
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "vault", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-client:
    container_name: test-client
    build:
      context: .
      dockerfile: Dockerfile.test-client
    volumes:
      - "../authd/build:/opt/authd/bin:ro"
      - "../cli/build:/opt/cli/bin:ro"
    command: sleep infinity
    depends_on:
      vault:
        condition: service_healthy

  test-server:
    container_name: test-server
    build:
      context: .
      dockerfile: Dockerfile.test-server
    volumes:
      - "../authd/build:/opt/authd/bin:ro"
      - "../server-access/flant-server-accessd/build:/opt/server-access/bin:ro"
      - "../server-access/server-access-nss/build/libnss_flantauth.so.2:/lib/x86_64-linux-gnu/libnss_flantauth.so.2:ro"
    environment:
      - SERVER_ACCESSD_CONF=/opt/server-access/config.yaml
    depends_on:
      vault:
        condition: service_healthy

networks:
  default:
    name: negentropy
