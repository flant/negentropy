version: "3"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    platform: linux/amd64
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_4LW_COMMANDS_WHITELIST: "srvr, mntr, ruok"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: docker.io/bitnami/kafka:2
    platform: linux/amd64
    container_name: kafka
    ports:
      - "9093:9093"
    volumes:
      - "./kafka/log4j.properties:/bitnami/kafka/config/log4j.properties"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://localhost:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "CLIENT"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 10s
      timeout: 20s
      retries: 5

  kafdrop:
    image: obsidiandynamics/kafdrop
    platform: linux/amd64
    container_name: kafdrop
    ports:
      - "9100:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      kafka:
        condition: service_healthy

  oidc-mock:
    image: alpine:3.14.2
    platform: linux/amd64
    container_name: oidc-mock
    ports:
      - "9998:9998"
    volumes:
      - "../e2e/tests/lib/oidc_mock/build/oidc-mock:/oidc-mock"
    command: /oidc-mock

networks:
  default:
    name: negentropy
