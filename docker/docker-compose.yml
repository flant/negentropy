version: "3"

services:
  vault-auth:
    image: alpine:3.14.2
    platform: linux/amd64
    container_name: vault-auth
    volumes:
      - "../infra/common/vault/vault/bin/vault:/bin/vault:ro"
      - "./vault/vault-auth.hcl:/etc/vault.hcl:ro"
      - "./kafka/ca.crt:/etc/ca.crt:ro"
      - "./kafka/client.crt:/etc/client.crt:ro"
      - "./kafka/client.key:/etc/client.key:ro"
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_CLIENT_TIMEOUT=120s
#      - DEBUG=true
    command: vault server -config /etc/vault.hcl
    cap_add:
      - IPC_LOCK
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "nc", "-z", "127.0.0.1:8200"]
      interval: 5s
      timeout: 5s
      retries: 5

  vault-root:
    image: alpine:3.14.2
    platform: linux/amd64
    container_name: vault-root
    volumes:
      - "../infra/common/vault/vault/bin/vault:/bin/vault:ro"
      - "./vault/vault-root.hcl:/etc/vault.hcl:ro"
      - "./kafka/ca.crt:/etc/ca.crt:ro"
      - "./kafka/client.crt:/etc/client.crt:ro"
      - "./kafka/client.key:/etc/client.key:ro"
    ports:
      - 8300:8300
    environment:
      - VAULT_ADDR=http://127.0.0.1:8300
      - VAULT_CLIENT_TIMEOUT=120s
    #      - DEBUG=true
    command: vault server -config /etc/vault.hcl
    cap_add:
      - IPC_LOCK
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "nc", "-z", "127.0.0.1:8300"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-client:
    platform: linux/amd64
    container_name: test-client
    build:
      context: .
      dockerfile: Dockerfile.test-client
    volumes:
      - "../authd/build:/opt/authd/bin:ro"
      - "../cli/build:/opt/cli/bin:ro"
    command: sleep infinity
    depends_on:
      vault-root:
        condition: service_healthy
      vault-auth:
        condition: service_healthy

  test-server:
    platform: linux/amd64
    container_name: test-server
    build:
      context: .
      dockerfile: Dockerfile.test-server
    volumes:
      - "../authd/build:/opt/authd/bin:ro"
      - "../server-access/flant-server-accessd/build:/opt/server-access/bin:ro"
      - "../server-access/server-access-nss/build/libnss_flantauth.so.2:/lib/x86_64-linux-gnu/libnss_flantauth.so.2:ro"
    environment:
      - SERVER_ACCESSD_CONF=/opt/server-access/config.yaml
    depends_on:
      vault-root:
        condition: service_healthy
      vault-auth:
        condition: service_healthy

networks:
  default:
    name: negentropy
