name: e2e tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [labeled]

jobs:
  e2e:
    if: (github.event_name == 'push' && github.event.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.label.name == '/run-e2e-tests')
    name: Run e2e tests
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -mod=readonly
      GOPATH: ${{ github.workspace }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Check out pull request's HEAD commit instead of the merge commit to
          # work-around an issue where wrong a commit is being checked out.
          # For more details, see:
          # https://github.com/actions/checkout/issues/299.
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Build
        run: bash build.sh

      - name: Setup Vault
        run: bash start.sh

      - name: Tests
        run: |
          export ROOT_VAULT_TOKEN=$(cat /tmp/root_token)
          export AUTH_VAULT_TOKEN=$(cat /tmp/auth_token)
          export ROOT_VAULT_URL=http://127.0.0.1:8300
          export AUTH_VAULT_URL=http://127.0.0.1:8200
          export ROOT_VAULT_INTERNAL_URL=http://vault_root:8200
          export AUTH_VAULT_INTERNAL_URL=http://vault_auth:8200
          go mod download
          go run github.com/onsi/ginkgo/ginkgo run ./...
        working-directory: e2e

  remove-label:
    name: Remove Label
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.label.name == '/run-e2e-tests'
    steps:
      - uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const eventLabelName = '${{github.event.label.name}}'
            const response = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })
            for (const label of response.data) {
              if (label.name === eventLabelName) {
                github.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: eventLabelName
                })
                break
              }
            }
